// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\PC20004\gin_todo_app\service.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTasKService is a mock of TasKService interface.
type MockTasKService struct {
	ctrl     *gomock.Controller
	recorder *MockTasKServiceMockRecorder
}

// MockTasKServiceMockRecorder is the mock recorder for MockTasKService.
type MockTasKServiceMockRecorder struct {
	mock *MockTasKService
}

// NewMockTasKService creates a new mock instance.
func NewMockTasKService(ctrl *gomock.Controller) *MockTasKService {
	mock := &MockTasKService{ctrl: ctrl}
	mock.recorder = &MockTasKServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTasKService) EXPECT() *MockTasKServiceMockRecorder {
	return m.recorder
}

// AddTask mocks base method.
func (m *MockTasKService) AddTask(task Task) (Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTask", task)
	ret0, _ := ret[0].(Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTask indicates an expected call of AddTask.
func (mr *MockTasKServiceMockRecorder) AddTask(task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTask", reflect.TypeOf((*MockTasKService)(nil).AddTask), task)
}

// DeleteTask mocks base method.
func (m *MockTasKService) DeleteTask(id TaskID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTask", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockTasKServiceMockRecorder) DeleteTask(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockTasKService)(nil).DeleteTask), id)
}

// GetTasks mocks base method.
func (m *MockTasKService) GetTasks() (Tasks, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTasks")
	ret0, _ := ret[0].(Tasks)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTasks indicates an expected call of GetTasks.
func (mr *MockTasKServiceMockRecorder) GetTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTasks", reflect.TypeOf((*MockTasKService)(nil).GetTasks))
}

// UpdateTask mocks base method.
func (m *MockTasKService) UpdateTask(task Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", task)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockTasKServiceMockRecorder) UpdateTask(task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockTasKService)(nil).UpdateTask), task)
}
